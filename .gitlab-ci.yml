image: continuumio/miniconda3:latest

stages:
  - codechecks
  - tests
  - pages

# global/ default before_script can be overriden
before_script:
  - cp -r conda_env_cache/pqueens /opt/conda/envs/pqueens
  - source activate pqueens

# define global cache that can be inhereted by jobs
cache: &global_cache
  # share the cache across the same branch
  key: ${CI_COMMIT_REF_SLUG}
  paths:
    - conda_env_cache/pqueens
  policy: pull

codechecks:
  stage: codechecks
  before_script:
    - export PIP_CACHE_DIR="/opt/cache/pip"
    - conda create --name pqueens -y python=3.8
    - source activate pqueens
    - pip install -r requirements.txt
  cache:
    #inheret global cache settings
    <<: *global_cache
    #override global policy
    policy: push
  script:
    - pylint --output-format=parseable pqueens | tee track_pylint.txt
  after_script:
    - mkdir conda_env_cache
    - cp -r /opt/conda/envs/pqueens conda_env_cache/pqueens
  artifacts:
    name: "$CI_JOB_NAME-$CI_JOB_ID"
    paths:
      - track_pylint.txt
    when: on_failure
    expire_in: 4 weeks

full_test_suite:
  stage: tests
  cache:
    #inheret global cache settings
    <<: *global_cache
  script:
  - pytest -n4 --cov-report=html
  artifacts:
    name: coverage_report
    paths:
      - html_coverage_report
    when: on_success
    expire_in: 3 days

pages:
  stage: pages
  # disable cache on this job since we do not need conda env here
  cache: {}
  dependencies:
    - full_test_suite
  before_script:
    - mkdir public
  script:
    - mv html_coverage_report public/coverage_report
  artifacts:
      # store the public path in artifact
      # this is needed since in a subsequent deploy stage (automatically generated by GitLab)
      # the content of the below artifact is published on GitLab Pages
      paths:
          - public
#  only:
#      refs:
#          - master

services:
  - name: mongo:3.4
    alias: mongodb
