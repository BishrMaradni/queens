[aliases]
test=pytest

[tool:pytest]
testpaths = 
    doc
    pqueens/tests/benchmarks
    pqueens/tests/integration_tests
    pqueens/tests/integration_tests/baci
    pqueens/tests/integration_tests/cluster
    pqueens/tests/integration_tests/python
    pqueens/tests/unittests
    pqueens/tests/unittests/database
    pqueens/tests/unittests/drivers
    pqueens/tests/unittests/example_simulator_functions
    pqueens/tests/unittests/external_geometry
    pqueens/tests/unittests/interfaces
    pqueens/tests/unittests/iterators
    pqueens/tests/unittests/models
    pqueens/tests/unittests/post_post
    pqueens/tests/unittests/randomfields
    pqueens/tests/unittests/utils
    pqueens/tests/unittests/variables
    pqueens/tests/unittests/visualization
addopts = -m "not benchmark" --doctest-modules --doctest-continue-on-failure --doctest-ignore-import-errors --cov-report=term --cov
markers =
    benchmark: Benchmarks, i.e. full QUEENS-iterator runs (excluded from the main pipeline)
    integration_tests: Integration tests (included in the main pipeline)
    unit_tests: Unit tests (included in the main pipeline)
    integration_tests_baci: Integration tests with BACI (included in the main pipeline)
    lnm_cluster: LNM cluster tests (excluded in the main pipeline)

[coverage:run]
source = pqueens
parallel = True
branch = True

[coverage:report]
# Regexes for lines to exclude from consideration
exclude_lines =
# Have to re-enable the standard pragma
    pragma: no cover

# Don't complain if non-runnable code isn't run
    if __name__ == .__main__.:

# Always show line numbers of uncovered statements
show_missing = False

[coverage:html]
directory = html_coverage_report
