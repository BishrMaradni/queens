[aliases]
test=pytest

[tool:pytest]
testpaths =
    doc
    pqueens/tests/benchmarks
    pqueens/tests/integration_tests
    pqueens/tests/integration_tests/baci
    pqueens/tests/integration_tests/cluster
    pqueens/tests/integration_tests/python
    pqueens/tests/unit_tests
    pqueens/tests/unit_tests/database
    pqueens/tests/unit_tests/drivers
    pqueens/tests/unit_tests/example_simulator_functions
    pqueens/tests/unit_tests/external_geometry
    pqueens/tests/unit_tests/interfaces
    pqueens/tests/unit_tests/iterators
    pqueens/tests/unit_tests/models
    pqueens/tests/unit_tests/data_processor
    pqueens/tests/unit_tests/randomfields
    pqueens/tests/unit_tests/utils
    pqueens/tests/unit_tests/parameters
    pqueens/tests/unit_tests/visualization
addopts = -m "not benchmark" --doctest-modules --doctest-continue-on-failure --doctest-ignore-import-errors
markers =
    benchmark: Benchmark tests, involving full QUEENS-iterator runs for performance benchmarks (excluded from the main pipeline)
    integration_tests: Integration tests with Python interface (included in the main pipeline)
    unit_tests: Unit tests (included in the main pipeline)
    integration_tests_baci: Integration tests with BACI (included in the main pipeline)
    lnm_cluster: Integration tests with LNM clusters (require access to LNM network, excluded in the main pipeline)
    imcs_cluster:  Integration tests with LNM clusters (require access to IMCS network, excluded in the main pipeline)

[coverage:run]
source = pqueens
parallel = True
branch = True

[coverage:report]
# Regexes for lines to exclude from consideration
exclude_lines =
# Have to re-enable the standard pragma
    pragma: no cover

# Don't complain if non-runnable code isn't run
    if __name__ == .__main__.:

# Always show line numbers of uncovered statements
show_missing = False

[coverage:html]
directory = html_coverage_report
