{
  "experiment_name" : "FSI_MC_lofi1_solver",
  "database"  :{
    "address" : "129.187.58.13:27017",
    "drop_existing" : "True"
  },
  "method": {
    "method_name": "monte_carlo",
    "method_options" :{
      "seed" : 1,
      "num_samples" : 10000, TODO: Check with Jonas B. if sample size is adequate
      "model" : "model",
      "result_description" : {
          "write_results" : true,
          "plot_results" : false
      }
    }
  },
  "model" : {
    "type" : "simulation_model",
    "interface" : "interface",
    "parameters" : "parameters"
  },
  "interface" : {
    "type" : "job_interface",
    "resources": "resources",
    "driver" : "driver"
  },
  "driver" :{
    "driver_type"           : "baci_bruteforce",
    "driver_params"         :{
      "input_template"        : "/home/nitzler/workspace/BACI_Rep/input/single_bending_wall_lofi_solver.dat",
      "path_to_executable"    : "/home/nitzler/workspace/BACI_Rep/Build/baci-release",
      "path_to_postprocessor" : "/home/nitzler/workspace/BACI_Rep/Build/post_drt_monitor", TODO: Check if postprocesing can be made more efficient
      "post_process_options"  : "--field=structure --node=37 --start=1", TODO: see above
      "experiment_dir"        : "/home/nitzler/workspace/BACI_Rep/output/mc_lofi_solver",
      "post_post_script"      : "/home/nitzler/workspace/QUEENS_Rep/queens/trials/post_post_script_FSI.py",
      "driver_file" : "/home/nitzler/workspace/QUEENS_Rep/queens/pqueens/drivers/baci_driver_bruteforce.py"
    }
  },
  "resources" : {
    "bruteforce" : {
      "scheduler"         : "bruteforce_scheduler",
      "max-concurrent"    : 50,
      "max-finished-jobs" : 100
    }
  },
  "bruteforce_scheduler" : {
    "scheduler_type" : "slurm",
    "num_procs_per_node" : 24, TODO: should we use all procs on a node?
    "num_nodes" : 25, TODO: This would mean we occupy half of Bruteforce. Is this ok?
    "walltime" : "8:00:00",
    "email" : "nitzler@lnm.mw.tum.de",
    "connect_to_resource" : ["ssh", "-T", "nitzler@bruteforce"]
  },
  "parameters" : {
    "random_variables" : {
      "E_modul" : {
        "type" : "FLOAT",
        "size" : 1,
        "distribution" : "lognormal",
        "distribution_parameter" : [0.05,0.15] TODO: Adjust these!
      },
      "Rand_vel_1" : {
        "type" : "FLOAT",
        "size" : 1,
        "distribution" : "normal",
        "distribution_parameter" : [0.0,1.0]
      },
      "Rand_vel_2" : {
        "type" : "FLOAT",
        "size" : 1,
        "distribution" : "normal",
        "distribution_parameter" : [0.0,1.0]
      },
       "Rand_vel_3" : {
        "type" : "FLOAT",
        "size" : 1,
        "distribution" : "normal",
        "distribution_parameter" : [0.0,1.0]
      },
       "Rand_vel_4" : {
        "type" : "FLOAT",
        "size" : 1,
        "distribution" : "normal",
        "distribution_parameter" : [0.0,1.0]
      },
       "Rand_vel_5" : {
        "type" : "FLOAT",
        "size" : 1,
        "distribution" : "normal",
        "distribution_parameter" : [0.0,1.0]
      },
       "Rand_vel_6" : {
        "type" : "FLOAT",
        "size" : 1,
        "distribution" : "normal",
        "distribution_parameter" : [0.0,1.0]
      },
       "Rand_vel_7" : {
        "type" : "FLOAT",
        "size" : 1,
        "distribution" : "normal",
        "distribution_parameter" : [0.0,1.0]
      },
       "Rand_vel_8" : { TODO: Check if 8 random var for velocity field are ok
        "type" : "FLOAT",
        "size" : 1,
        "distribution" : "normal",
        "distribution_parameter" : [0.0,1.0]
      }
  }
  }
