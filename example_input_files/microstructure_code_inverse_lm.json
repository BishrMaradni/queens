{
    "experiment_name": "TTT_inverse_lm",
    "database": {"address": "localhost:27017", "drop_existing": false},
    "method": {
        "method_name": "optimization",
        "method_options": {
            "model": "model",
            "algorithm": "LM",
            "experimental_csv_data_base_dirs": [
                "/home/nitzler/workspace/microstructure/Experimental_data/TTT_data/TTT_start",
                "/home/nitzler/workspace/microstructure/Experimental_data/TTT_data/TTT_start"
            ],
            "coordinate_labels": ["t","T"],
            "axis_scaling_experimental": ["log","linear"],
            "output_label": "Xa",
            "output_scaling_experimental": "linear",
            "initial_guess": [3.0, 0.437, 847.0, 0.0337],
            "max_feval": 1000,
            "result_description": {"write_results": true, "plot_results": true}
        }
    },
    "model": {"type": "simulation_model", "interface": "interface", "parameters": "parameters"},
    "interface": {"type": "job_interface", "resources": "resources", "driver": "driver"},
    "driver": {
        "driver_type": "microstructure_native",
        "driver_params": {
            "input_template": "/home/nitzler/workspace/microstructure/input_files/TTT_IA_queens_template.json",
            "path_to_executable": "/home/nitzler/Programs/Anaconda/anaconda3/envs/microstructure/bin/python /home/nitzler/workspace/microstructure/main.py",
            "experiment_dir": "/home/nitzler/workspace/ms_inverse_analysis",
            "post_post": {"post_post_approach_sel": "netCDF", "file_prefix": "TTT", "delete_field_data":  false, "replace_non_numeric_values":  10}
        }
    },
    "resources": {
        "local_machine": {
            "scheduler": "local_scheduler",
            "max-concurrent": 1,
            "max-finished-jobs": 1E9
        }
    },
    "local_scheduler": {
        "scheduler_type": "local",
        "num_procs": 1,
        "num_procs_post": 1,
        "walltime": "120:00:00",
        "meta_output": "True"
    },
    "parameters": {
        "random_variables": {
            "a_exp": {"type": "FLOAT", "size": 1},
            "k_param_a": {"type": "FLOAT", "size": 1},
            "k_param_b": {"type": "FLOAT", "size": 1},
            "k_param_c": {"type": "FLOAT", "size": 1}
        }
    }
}
